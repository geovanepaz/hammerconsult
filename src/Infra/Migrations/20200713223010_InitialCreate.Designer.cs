// <auto-generated />
using System;
using Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(ModeloContext))]
    [Migration("20200713223010_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Convidado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnName("funcionario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("convidados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e14a59d-effa-45c7-bf2c-edd8c31856fc"),
                            Email = "maria@gmail.com",
                            FuncionarioId = new Guid("de74899d-b13e-4e5d-b556-28a0d60259ab"),
                            Nome = "Maria - Namorada Jonas"
                        },
                        new
                        {
                            Id = new Guid("1b850052-f464-44e4-809f-fbdc3402bf0f"),
                            Email = "deise@gmail.com",
                            FuncionarioId = new Guid("8965db97-cdde-44bb-ae95-3f984ea3ad87"),
                            Nome = "Deise - Irmã Geovane"
                        });
                });

            modelBuilder.Entity("Domain.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CustoBebida")
                        .HasColumnName("custo_bebida")
                        .HasColumnType("decimal");

                    b.Property<decimal>("CustoComida")
                        .HasColumnName("custo_comida")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("eventos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95321295-7909-43bd-87bd-e82bf9dcc212"),
                            CustoBebida = 100m,
                            CustoComida = 100m,
                            Data = new DateTime(2021, 7, 13, 19, 30, 10, 50, DateTimeKind.Local).AddTicks(533),
                            Descricao = "Churras ano que vem"
                        });
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnName("cargo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnName("setor")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("funcionarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8965db97-cdde-44bb-ae95-3f984ea3ad87"),
                            Cargo = "Dev .Net",
                            Email = "geovane@gmail.com",
                            Nome = "Geovane Paz",
                            Setor = "TI"
                        },
                        new
                        {
                            Id = new Guid("de74899d-b13e-4e5d-b556-28a0d60259ab"),
                            Cargo = "Dev .Net",
                            Email = "jonas@gmail.com",
                            Nome = "Jonas",
                            Setor = "TI"
                        },
                        new
                        {
                            Id = new Guid("b0c9f66e-acd8-4040-972e-2c41c442490f"),
                            Cargo = "Dev .Net",
                            Email = "rodrigo@gmail.com",
                            Nome = "Rodrigo",
                            Setor = "TI"
                        },
                        new
                        {
                            Id = new Guid("5197dc3e-a92b-43d5-bdea-a4d6e8222507"),
                            Cargo = "Dev .Net",
                            Email = "roger@gmail.com",
                            Nome = "Roger",
                            Setor = "TI"
                        });
                });

            modelBuilder.Entity("Domain.ParticipanteEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ConvidadoComBebida")
                        .HasColumnName("convidado_bebida_inclusa")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ConvidadoId")
                        .HasColumnName("convidado_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventoId")
                        .HasColumnName("evento_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("FuncionarioComBebida")
                        .HasColumnName("funcionario_bebida_inclusa")
                        .HasColumnType("bit");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnName("funcionario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorBebida")
                        .HasColumnName("valor_bebida")
                        .HasColumnType("decimal");

                    b.Property<decimal>("ValorComida")
                        .HasColumnName("valor_comida")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("ConvidadoId");

                    b.HasIndex("EventoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("participantes_evento");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3b57570-6a6c-4b98-84fe-796bdd160656"),
                            ConvidadoComBebida = true,
                            ConvidadoId = new Guid("1b850052-f464-44e4-809f-fbdc3402bf0f"),
                            EventoId = new Guid("95321295-7909-43bd-87bd-e82bf9dcc212"),
                            FuncionarioComBebida = true,
                            FuncionarioId = new Guid("8965db97-cdde-44bb-ae95-3f984ea3ad87"),
                            ValorBebida = 20m,
                            ValorComida = 20m
                        },
                        new
                        {
                            Id = new Guid("53600bed-d144-4955-aa6c-9f5ee7a58a32"),
                            ConvidadoComBebida = false,
                            ConvidadoId = new Guid("7e14a59d-effa-45c7-bf2c-edd8c31856fc"),
                            EventoId = new Guid("95321295-7909-43bd-87bd-e82bf9dcc212"),
                            FuncionarioComBebida = false,
                            FuncionarioId = new Guid("de74899d-b13e-4e5d-b556-28a0d60259ab"),
                            ValorBebida = 0m,
                            ValorComida = 20m
                        },
                        new
                        {
                            Id = new Guid("cd00cd05-525b-4718-893b-b14b86bf6620"),
                            ConvidadoComBebida = false,
                            EventoId = new Guid("95321295-7909-43bd-87bd-e82bf9dcc212"),
                            FuncionarioComBebida = true,
                            FuncionarioId = new Guid("b0c9f66e-acd8-4040-972e-2c41c442490f"),
                            ValorBebida = 10m,
                            ValorComida = 10m
                        });
                });

            modelBuilder.Entity("Domain.Convidado", b =>
                {
                    b.HasOne("Domain.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ParticipanteEvento", b =>
                {
                    b.HasOne("Domain.Convidado", "Convidado")
                        .WithMany()
                        .HasForeignKey("ConvidadoId");

                    b.HasOne("Domain.Evento", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
